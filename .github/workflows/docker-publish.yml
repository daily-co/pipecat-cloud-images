name: Docker Build and Push

on:
  push:
    branches: [ "main" ]
    tags: [ '[0-9]+.[0-9]+.[0-9]+' ]
  pull_request:
    branches: [ "main" ]

jobs:
  find-images:
    runs-on: ubuntu-latest
    outputs:
      images: ${{ steps.set-images.outputs.images }}
    steps:
      - uses: actions/checkout@v4
      - id: set-images
        run: |
          IMAGES=$(find . -name Dockerfile -exec dirname {} \; | sed 's/.\///' | jq -R -s -c 'split("\n")[:-1]')
          echo "images=$IMAGES" >> $GITHUB_OUTPUT

  build:
    needs: find-images
    strategy:
      matrix:
        image: ${{ fromJson(needs.find-images.outputs.images) }}
    runs-on: ubuntu-latest
    name: Build ${{ matrix.image }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PAT }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: pipecatai/${{ matrix.image }}
          tags: |
            type=raw,value=latest,enable=${{ github.ref == format('refs/heads/{0}', 'main') }}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,format=short

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.image }}
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}